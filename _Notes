Tweet Object:
https://developer.twitter.com/en/docs/tweets/data-dictionary/overview/tweet-object.html

https://dev.twitter.com/web/embedded-tweets/css

https://stackoverflow.com/questions/24663924/how-to-style-twitter-widget-using-my-own-css

!!!
I wanted to build custom Twitter cards, in order to reduce REST calls. Each use of twttr.widget.create will produce a REST call. Unfortunately, I learned that I cannot create the summary cards from the returned JSON data, because the summary fields are not in the data. Instead, they are created by Twitter. (https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/summary) Twitter scrapes target sites for Twitter meta data, such as twitter:card, twitter: title, twitter:description.
    ex. https://twitter.com/AppDirect/status/936629480302428160
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@searchcio" />
    <meta name="twitter:title" content="Digital transformation strategies: Progress in telecom, banking" />
    <meta name="twitter:description" content="Digital transformation strategies are making the most progress in telecom, banking, utilities and education, according to market researcher Ovum." />
I could write some code to crawl the target sites for the summary data, but that's reinventing the wheel, and it doesn't reduce network traffic any. Too much risk and effort for little to no reward. It's better use twttr.widget.create. This will also eliminate the need for writing custom CSS.
!!! Correction - Can use cheerio to scrape meta data


My Tweet Object:
        var tweetObj = {
          id:                 tweet.id_str,
          userName:           tweet.user.name,
          createdAt:          tweet.created_at,   
          fullText:           tweet.full_text,
          summaryUrl:         summaryUrl,   // same as summary-site?
          summaryCard:        null,         // what's this for?
          summarySite:        null,
          summaryTitle:       null,
          summaryDescription: null          // same as full-text?
        }  

URLs:
profile_background_image_url:"http://pbs.twimg.com/profile_background_images/830856509/0e0fabf0437a68b0fdf92bb3219279a0.png"
profile_background_image_url_https:"https://pbs.twimg.com/profile_background_images/830856509/0e0fabf0437a68b0fdf92bb3219279a0.png"
profile_banner_url:"https://pbs.twimg.com/profile_banners/154310289/1504623002"
profile_image_url:"http://pbs.twimg.com/profile_images/890252563190226944/lP9wOBFy_normal.jpg"
profile_image_url_https:"https://pbs.twimg.com/profile_images/890252563190226944/lP9wOBFy_normal.jpg"        


Output from ssl-root-cas:
Needs latest SSL Root Certificate Authority data c:\Development\AppDirectTwitter\AppDirectTwitter\node_modules\ssl-root-cas\ssl-root-cas-latest.js
latest.js:9
Loading latest certificates from https://mxr.mozilla.org/nss/source/lib/ckfw/builtins/certdata.txt?raw=1
ca-store-generator.js:181
Skipped 2 untrusted certificates.
ca-store-generator.js:123
Processed 155 certificates.
ca-store-generator.js:124
Wrote 155 certificates in 'c:\Development\AppDirectTwitter\AppDirectTwitter\node_modules\ssl-root-cas\pems\'.
ca-store-generator.js:146
Wrote 'c:\Development\AppDirectTwitter\AppDirectTwitter\node_modules\ssl-root-cas\ssl-root-cas-latest.js'.
ca-store-generator.js:155
latest.js:12
##########################################################################################
latest.js:13
#                                                                                        #
latest.js:14
#  Downloaded the latest Root Certificate Authorities. Restart your server to use them.  #
latest.js:15
#                                                                                        #
latest.js:16
##########################################################################################
latest.js:17
latest.js:18


function codeThatMightChangeFlag(callback) {
    // do a bunch of stuff
    if (condition happens to change flag value) {
        // call the callback to notify other code
        callback();
    }
}